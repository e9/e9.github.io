<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019/01 on e9.github.io</title>
    <link>https://e9.github.io/tags/2019/01/</link>
    <description>Recent content in 2019/01 on e9.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 24 Jan 2019 20:20:00 +0900</lastBuildDate>
    
	<atom:link href="https://e9.github.io/tags/2019/01/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gomobileで非同期な関数を扱いたい</title>
      <link>https://e9.github.io/posts/1548328800/</link>
      <pubDate>Thu, 24 Jan 2019 20:20:00 +0900</pubDate>
      
      <guid>https://e9.github.io/posts/1548328800/</guid>
      <description>gomobileでiOS向けのライブラリを書いている。
$ gomobile version gomobile version +dc07713 Mon Jan 7 16:22:57 2019 +0000 (android,ios); androidSDK=  package main import &amp;quot;app/x&amp;quot; func main() { x.X() }  package x func X() { }  この関数Xが非同期で動くとして、その結果をメインに返したい。どうするか。コールバックを追加すればよい。
package main import ( &amp;quot;app/x&amp;quot; &amp;quot;log&amp;quot; ) func main() { c := make(chan struct{}, 0) x.X(func() { log.Println(&amp;quot;two&amp;quot;) close(c) }) log.Println(&amp;quot;one&amp;quot;) &amp;lt;-c }  package x import &amp;quot;time&amp;quot; func X(callback func()) { go (func() { time.Sleep(1 * time.</description>
    </item>
    
  </channel>
</rss>